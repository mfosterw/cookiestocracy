/* tslint:disable */
/* eslint-disable */
/**
 * Democrasite API
 * Documentation of API endpoints of Democrasite
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PullRequest } from './PullRequest';
import {
    PullRequestFromJSON,
    PullRequestFromJSONTyped,
    PullRequestToJSON,
} from './PullRequest';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 *
 * @export
 * @interface PatchedBill
 */
export interface PatchedBill {
    /**
     *
     * @type {number}
     * @memberof PatchedBill
     */
    readonly id?: number;
    /**
     *
     * @type {User}
     * @memberof PatchedBill
     */
    author?: User;
    /**
     *
     * @type {PullRequest}
     * @memberof PatchedBill
     */
    readonly pullRequest?: PullRequest;
    /**
     *
     * @type {string}
     * @memberof PatchedBill
     */
    status?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof PatchedBill
     */
    readonly yesVotes?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof PatchedBill
     */
    readonly noVotes?: Array<string>;
    /**
     *
     * @type {Date}
     * @memberof PatchedBill
     */
    readonly created?: Date;
    /**
     *
     * @type {Date}
     * @memberof PatchedBill
     */
    statusChanged?: Date;
    /**
     *
     * @type {string}
     * @memberof PatchedBill
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof PatchedBill
     */
    description?: string;
    /**
     * True if this bill is an amendment to the constitution
     * @type {boolean}
     * @memberof PatchedBill
     */
    readonly constitutional?: boolean;
}

/**
 * Check if a given object implements the PatchedBill interface.
 */
export function instanceOfPatchedBill(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedBillFromJSON(json: any): PatchedBill {
    return PatchedBillFromJSONTyped(json, false);
}

export function PatchedBillFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedBill {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'id': !exists(json, 'id') ? undefined : json['id'],
        'author': !exists(json, 'author') ? undefined : UserFromJSON(json['author']),
        'pullRequest': !exists(json, 'pull_request') ? undefined : PullRequestFromJSON(json['pull_request']),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'yesVotes': !exists(json, 'yes_votes') ? undefined : json['yes_votes'],
        'noVotes': !exists(json, 'no_votes') ? undefined : json['no_votes'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'statusChanged': !exists(json, 'status_changed') ? undefined : (new Date(json['status_changed'])),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'constitutional': !exists(json, 'constitutional') ? undefined : json['constitutional'],
    };
}

export function PatchedBillToJSON(value?: PatchedBill | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'author': UserToJSON(value.author),
        'status': value.status,
        'status_changed': value.statusChanged === undefined ? undefined : (value.statusChanged.toISOString()),
        'name': value.name,
        'description': value.description,
    };
}
