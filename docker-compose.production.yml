volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: democrasite_production_django
    volumes:
      - production_django_media:/app/democrasite/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 500M

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: democrasite_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 300M

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: democrasite_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 100M

  redis:
    image: docker.io/redis:6

  celeryworker:
    <<: *django
    image: democrasite_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: democrasite_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: democrasite_production_flower
    command: /start-flower

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: democrasite_local_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: 100M

  newrelic-agent:
    image: newrelic/infrastructure:1.67.3
    env_file:
      - ./.envs/.production/.newrelic
    cap_add:
      - SYS_PTRACE
    network_mode: host
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped
